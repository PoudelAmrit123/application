name: Building the docker image 

on:
 push:
   branches:
     - dev
     - main
   paths:
     - 'frontend/**'
     - 'backend1/**'
     - 'backend2/**'
# env:
#   CLERK_PUBLISHABLE_KEY: ${{ vars.CLERK_PUBLISHABLE_KEY }}
#   DB_CLIENT: ${{ vars.DB_CLIENT }}
#   DB_HOST: ${{ vars.DB_HOST }}
#   DB_NAME: ${{ vars.DB_NAME }}
#   DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
#   DB_PORT: ${{ vars.DB_PORT }}
#   DB_USER: ${{ vars.DB_USER }}
#   NODE_ENV: ${{ vars.NODE_ENV }}
#   VITE_CLERK_PUBLISHABLE_KEY: ${{ vars.VITE_CLERK_PUBLISHABLE_KEY }}
#   CLERK_SECRET_KEY: ${{ vars.CLERK_SECRET_KEY }}

jobs:
  changes:
   runs-on: ubuntu-latest
   outputs:
     frontend: ${{ steps.filter.outputs.frontend}}
     backend1: ${{steps.filter.outputs.backend1}}
     backend2: ${{steps.filter.outputs.backend2}}
   steps:
     - name: Code Cloning 
       uses: actions/checkout@v4
     - name: Detect Changed directories
       id: filter
       uses: dorny/paths-filter@v3
       with:
        filters: |
          backend:
            - 'backend/**'
          frontend:
            - 'frontend/**'
     
  frontend:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: [frontend]
    environment: >
      ${{ startsWith(github.ref_name, 'feature/') && 'feature' ||
          github.ref_name == 'dev' && 'dev' ||
          github.ref_name == 'main' && 'main' }}
    steps:
      - name: Test
        run: echo "Hello from the frontend"
      - name: Code Cloning to frontend Runner.
        uses: actions/checkout@v4
          #- name: Set up Docker
          #uses: docker/setup-docker-action@v4
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract version From the package.json
        id: version
        run: |
           VERSION=$(sed -n 's/.*"version": *"\(.*\)".*/\1/p' frontend/package.json)
            echo "VERSION=$VERSION" >> $GITHUB_ENV


      - name: Building the Frontend Image
        run: |
          docker build -t amritpoudel/frontend:${{ github.ref_name }}-${{ github.sha }} --build-arg VITE_CLERK_PUBLISHABLE_KEY=${{ vars.VITE_CLERK_PUBLISHABLE_KEY}}  ./frontend

          docker tag amritpoudel/frontend:${{ github.ref_name }}-${{ github.sha }} amritpoudel/frontend:${{ env.VERSION }}

          docker push amritpoudel/frontend:${{ env.VERSION }}

  backend1:
    needs: changes
    if: ${{ needs.changes.outputs.backend1 == 'true' }}
    runs-on: [backend]
    environment: >
      ${{ startsWith(github.ref_name, 'feature/') && 'feature' ||
          github.ref_name == 'dev' && 'dev' ||
          github.ref_name == 'main' && 'main' }}
    steps:
      - name: Test
        run: echo "Hello from the backend"
      - name: Code Cloning to ubuntu
        uses: actions/checkout@v4
          #- name: Set up Docker
          #uses: docker/setup-docker-action@v4
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract version From the package.json
        id: version
        run: |
           VERSION=$(sed -n 's/.*"version": *"\(.*\)".*/\1/p' backend1/package.json)
            echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Building the Backend Image
        run: |
          docker build -t amritpoudel/backend1:${{ github.ref_name }}-${{ github.sha }} ./backend1

          docker tag amritpoudel/backend1:${{ github.ref_name }}-${{ github.sha }} amritpoudel/backend1:${{ env.VERSION }}

          docker push amritpoudel/backend1:${{ env.VERSION }}
        
  backend2:
    needs: changes
    if: ${{ needs.changes.outputs.backend2 == 'true' }}
    runs-on: [backend]
    environment: >
      ${{ startsWith(github.ref_name, 'feature/') && 'feature' ||
          github.ref_name == 'dev' && 'dev' ||
          github.ref_name == 'main' && 'main' }}
    steps:
      - name: Test
        run: echo "Hello from the backend"
      - name: Code Cloning to ubuntu
        uses: actions/checkout@v4
          #- name: Set up Docker
          #uses: docker/setup-docker-action@v4
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract version From the package.json
        id: version
        run: |
           VERSION=$(sed -n 's/.*"version": *"\(.*\)".*/\1/p' backend2/package.json)
            echo "VERSION=$VERSION" >> $GITHUB_ENV
      
      - name: Building the Backend Image
        run: |
          docker build -t amritpoudel/backend2:${{ github.ref_name }}-${{ github.sha }} ./backend2

          docker tag amritpoudel/backend2:${{ github.ref_name }}-${{ github.sha }} amritpoudel/backend2:${{ env.VERSION }}

          docker push amritpoudel/backend2:${{ env.VERSION }}
          


         
  

 
